import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

normal = [
    (13.0, 13),
    (10.0, 10),
    (17.0, 17),
    (12.0, 12),
    (21.0, 21),
    (25.0, 25),
    (9.01, 9),
    (9.01, 9),
    (16.0, 16),
    (21.0, 21),
    (8.01, 8),
    (9.00, 9),
    (8.01, 8),
    (24.0, 24),
    (8.65, 10),
    (5.08, 25),
    (0, 1),
    (4.52, 19),
    (3.97, 15),
    (0, 1),
    (8.00, 8),
    (11.9, 17),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (23.9, 24),
    (0, 1),
    (4.72, 18),
    (3.81, 8),
    (23.0, 23),
    (5.01, 5),
    (14.0, 14),
    (0, 1),
    (5.96, 10),
    (5.30, 15),
    (0, 1),
    (0, 1),
    (14.5, 16),
    (12.3, 15),
    (19.8, 20),
    (0, 1),
    (0, 1),
    (0, 1),
    (2.97, 8),
    (5.00, 5),
    (9.76, 10),
    (17.8, 19),
    (24.5, 25),
    (11.6, 21),
    (9.27, 21),
    (6.98, 7),
    (16.9, 17),
    (8.80, 9),
    (19.7, 20),
    (16.3, 20),
    (14.0, 15),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (13.0, 13),
    (0, 1),
    (0, 1),
    (11.9, 12),
    (2.58, 8),
    (1.82, 7),
    (11.3, 16),
    (2.64, 23),
    (3.29, 12),
    (2.67, 18),
    (2.86, 7),
    (2.69, 5),
    (4.99, 25),
    (4.76, 12),
    (3.25, 6),
    (2.28, 23),
    (2.38, 25),
    (2.55, 13),
    (2.77, 23),
    (3.96, 6),
    (4.69, 15),
    (5.06, 12),
    (6.41, 24),
    (7.70, 10),
    (6.52, 24),
    (8.42, 14),
    (6.87, 7),
    (8.73, 21),
    (7.80, 10),
    (10.6, 24),
    (8.21, 11),
    (8.00, 8),
    (0, 1),
    (6.23, 24),
]

bacar = [
    (13.0, 13),
    (10.0, 10),
    (17.0, 17),
    (12.0, 12),
    (21.0, 21),
    (25.0, 25),
    (9.01, 9),
    (9.01, 9),
    (16.0, 16),
    (21.0, 21),
    (8.01, 8),
    (9.00, 9),
    (8.00, 8),
    (24.0, 24),
    (9.28, 10),
    (25.0, 25),
    (7.44, 23),
    (2.78, 19),
    (13.6, 15),
    (4.51, 20),
    (5.53, 8),
    (17.0, 17),
    (13.3, 19),
    (0, 1),
    (0, 1),
    (0, 1),
    (5.00, 5),
    (15.3, 24),
    (16.9, 17),
    (3.37, 18),
    (5.31, 8),
    (23.0, 23),
    (5.00, 5),
    (14.0, 14),
    (11.0, 11),
    (2.91, 10),
    (14.7, 15),
    (3.66, 23),
    (3.11, 10),
    (4.22, 16),
    (15.0, 15),
    (20.0, 20),
    (0, 1),
    (0, 1),
    (0, 1),
    (4.59, 8),
    (5.00, 5),
    (2.04, 10),
    (19.0, 19),
    (25.0, 25),
    (1.82, 21),
    (2.40, 21),
    (4.67, 7),
    (5.85, 17),
    (9.00, 9),
    (20.0, 20),
    (3.62, 20),
    (15.0, 15),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (10.0, 10),
    (13.0, 13),
    (0, 1),
    (0, 1),
    (0, 1),
    (7.13, 8),
    (1.70, 7),
    (10.3, 16),
    (3.53, 23),
    (6.54, 12),
    (3.91, 18),
    (3.21, 7),
    (5.00, 5),
    (3.67, 25),
    (4.08, 12),
    (5.32, 6),
    (3.55, 23),
    (2.74, 25),
    (2.63, 13),
    (3.70, 23),
    (5.42, 6),
    (6.62, 15),
    (4.55, 12),
    (23.9, 24),
    (10.0, 10),
    (24.0, 24),
    (13.1, 14),
    (7.00, 7),
    (16.0, 21),
    (10.0, 10),
    (13.9, 24),
    (11.0, 11),
    (8.00, 8),
    (6.00, 6),
    (24.0, 24),

]

bacar_pp = [
    (13.0, 13),
    (10.0, 10),
    (17.0, 17),
    (12.0, 12),
    (21.0, 21),
    (25.0, 25),
    (9.01, 9),
    (9.01, 9),
    (16.0, 16),
    (21.0, 21),
    (8.01, 8),
    (9.00, 9),
    (8.01, 8),
    (24.0, 24),
    (10.0, 10),
    (20.5, 25),
    (22.1, 23),
    (13.4, 19),
    (9.98, 15),
    (8.40, 20),
    (0, 1),
    (0, 1),
    (18.0, 19),
    (5.00, 5),
    (9.61, 15),
    (25.0, 25),
    (5.00, 5),
    (5.35, 24),
    (17.0, 17),
    (18.0, 18),
    (8.00, 8),
    (23.0, 23),
    (5.00, 5),
    (14.0, 14),
    (10.8, 11),
    (9.24, 10),
    (9.23, 15),
    (7.25, 23),
    (8.51, 10),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (0, 1),
    (8.00, 8),
    (5.00, 5),
    (6.53, 10),
    (18.5, 19),
    (21.5, 25),
    (8.03, 21),
    (14.7, 21),
    (6.98, 7),
    (14.8, 17),
    (8.28, 9),
    (16.4, 20),
    (9.67, 20),
    (15.0, 15),
    (12.9, 13),
    (0, 1),
    (14.9, 20),
    (7.00, 7),
    (8.88, 11),
    (5.00, 5),
    (15.7, 21),
    (7.36, 10),
    (13.0, 13),
    (8.97, 21),
    (13.9, 21),
    (9.36, 12),
    (8.00, 8),
    (6.03, 7),
    (15.4, 16),
    (9.33, 23),
    (11.9, 12),
    (8.82, 18),
    (5.22, 7),
    (5.00, 5),
    (6.90, 25),
    (12.0, 12),
    (6.01, 6),
    (17.4, 23),
    (8.50, 25),
    (6.25, 13),
    (8.43, 23),
    (6.00, 6),
    (15.0, 15),
    (9.39, 12),
    (24.0, 24),
    (0, 1),
    (24.0, 24),
    (0, 1),
    (6.96, 7),
    (12.1, 21),
    (9.70, 10),
    (9.56, 24),
    (10.9, 11),
    (7.59, 8),
    (5.98, 6),
    (24.0, 24),
]

bacar_pp_sats = [x[0] / x[1] for x in bacar_pp]
bacar_sats = [x[0] / x[1] for x in bacar]
normal_sats = [x[0] / x[1] for x in normal]

print(f"bacar_pp_sats {len(bacar_pp_sats)}")
print(f"bacar_sats {len(bacar_sats)}")
print(f"normal_sats {len(normal_sats)}")


def group(data):
    res = {
        "<25%": 0,
        "25-50%": 0,
        "50-75%": 0,
        "75-90%": 0,
        "90-99%": 0,
        "100%": 0,
    }

    for d in data:
        if d < 0.25:
            res["<25%"] += 1
        if 0.25 <= d <= 0.50:
            res["25-50%"] += 1
        if 0.50 <= d <= 0.75:
            res["50-75%"] += 1
        if 0.75 <= d <= 0.9:
            res["75-90%"] += 1
        if 0.9 <= d <= 0.99:
            res["90-99%"] += 1
        if 1 <= d <= 1:
            res["100%"] += 1

    return res


res_norm = group(normal_sats)
res_bacar = group(bacar_sats)
res_bacarpp = group(bacar_pp_sats)

data = {
    '<25%': [res_norm['<25%'], res_bacar['<25%'], res_bacarpp['<25%']],
    '25-50%': [res_norm['25-50%'], res_bacar['25-50%'], res_bacarpp['25-50%']],
    '50-75%': [res_norm['50-75%'], res_bacar['50-75%'], res_bacarpp['50-75%']],
    '75-90%': [res_norm['75-90%'], res_bacar['75-90%'], res_bacarpp['75-90%']],
    '90-99%': [res_norm['90-99%'], res_bacar['90-99%'], res_bacarpp['90-99%']],
    '100%': [res_norm['100%'], res_bacar['100%'], res_bacarpp['100%']],
}

df = pd.DataFrame(data, columns=['<25%', '25-50%', '50-75%', '75-90%', '90-99%', '100%'],
                  index=['Shortest Path', 'BACAR', 'BACAR++'])

df.plot.bar(figsize=(14, 10))
plt.ylabel("Number of Flows", fontsize=30)
plt.legend(fontsize=25, title="Actual/Requested Rate", title_fontsize=25)
plt.xticks(fontsize=25, rotation=0)
plt.yticks(fontsize=25)
plt.show()
